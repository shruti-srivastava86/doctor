# -*- coding: utf-8 -*-
# Generated by Django 1.11.9 on 2018-08-27 13:16
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='WeightAssessment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('initial_score', models.PositiveIntegerField()),
                ('score', models.DecimalField(decimal_places=10, max_digits=14)),
                ('calculation_weight', models.DecimalField(decimal_places=10, editable=False, max_digits=14)),
                ('bmi', models.DecimalField(decimal_places=2, max_digits=4)),
                ('first_meal_of_day', models.TimeField(blank=True, null=True)),
                ('meal_plan', models.PositiveSmallIntegerField(blank=True, choices=[(0, 'Five and One'), (1, 'Three and Three'), (2, 'No Meal Plan')], null=True)),
            ],
            options={
                'verbose_name': 'Assessment',
                'verbose_name_plural': 'Assessment',
            },
        ),
        migrations.CreateModel(
            name='WeightDailyAssessment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('day', models.IntegerField()),
                ('time_logs', django.contrib.postgres.fields.ArrayField(base_field=models.TimeField(), blank=True, null=True, size=None)),
                ('total_completed', models.PositiveIntegerField(default=0)),
                ('status', models.PositiveSmallIntegerField(choices=[(0, 'In Progress'), (1, 'Complete'), (2, 'Incomplete'), (3, 'Reset')])),
                ('assessment_date', models.DateField()),
                ('from_apple_health', models.BooleanField(default=False)),
                ('meal_plan', models.PositiveSmallIntegerField(blank=True, choices=[(0, 'Five and One'), (1, 'Three and Three'), (2, 'No Meal Plan')], null=True)),
            ],
            options={
                'verbose_name': 'Daily Assessment',
                'ordering': ['day'],
                'verbose_name_plural': 'Daily Assessment',
            },
        ),
        migrations.CreateModel(
            name='WeightDailyAssessmentMeal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('meal_type', models.PositiveSmallIntegerField(blank=True, choices=[(0, 'Five and One'), (1, 'Three and Three'), (2, 'Healthy'), (3, 'Ok'), (4, 'Unhealthy')], null=True)),
                ('time', models.TimeField()),
                ('status', models.PositiveSmallIntegerField(choices=[(0, 'In Progress'), (1, 'Complete'), (2, 'Incomplete'), (3, 'Pending')], default=3)),
            ],
            options={
                'verbose_name': 'Daily Assessment Meal',
                'ordering': ['id'],
                'verbose_name_plural': 'Daily Assessment Meal',
            },
        ),
        migrations.CreateModel(
            name='WeightDaysRange',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('start_range', models.PositiveSmallIntegerField()),
                ('end_range', models.PositiveSmallIntegerField()),
                ('required_completions', models.PositiveSmallIntegerField()),
                ('challenge', models.TextField()),
                ('stage', models.PositiveSmallIntegerField()),
            ],
            options={
                'verbose_name': 'Days Range',
                'verbose_name_plural': 'Days Range',
            },
        ),
        migrations.CreateModel(
            name='WeightWeeklyAssessmentLogs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bmi', models.IntegerField(blank=True, null=True)),
                ('waist', models.IntegerField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weight_weekly_assessment', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Weekly Assessment',
                'ordering': ['-created_at'],
                'verbose_name_plural': 'Weekly Assessment',
            },
        ),
        migrations.AddIndex(
            model_name='weightdaysrange',
            index=models.Index(fields=['start_range', 'stage'], name='weight_weig_start_r_5fef48_idx'),
        ),
        migrations.AddField(
            model_name='weightdailyassessmentmeal',
            name='daily_assessment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meals', to='weight.WeightDailyAssessment'),
        ),
        migrations.AddField(
            model_name='weightdailyassessment',
            name='days_range',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessments', to='weight.WeightDaysRange'),
        ),
        migrations.AddField(
            model_name='weightdailyassessment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weight_daily_assessments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='weightassessment',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='weight_assessment', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='weightdailyassessment',
            index=models.Index(fields=['assessment_date'], name='weight_weig_assessm_6986b7_idx'),
        ),
        migrations.AddIndex(
            model_name='weightassessment',
            index=models.Index(fields=['calculation_weight'], name='weight_weig_calcula_672beb_idx'),
        ),
        migrations.AddIndex(
            model_name='weightassessment',
            index=models.Index(fields=['first_meal_of_day'], name='weight_weig_first_m_d061fd_idx'),
        ),
        migrations.AddIndex(
            model_name='weightassessment',
            index=models.Index(fields=['meal_plan'], name='weight_weig_meal_pl_071501_idx'),
        ),
    ]
