# -*- coding: utf-8 -*-
# Generated by Django 1.11.9 on 2018-08-27 13:16
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import doctor.user.managers
import doctor.user.utils
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('scarface', '0004_auto_20151217_1131'),
        ('auth', '0008_alter_user_username_max_length'),
        ('badges', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('gender', models.PositiveSmallIntegerField(choices=[(0, 'Male'), (1, 'Female'), (2, 'Other')])),
                ('dob', models.DateField()),
                ('height', models.PositiveIntegerField(help_text='Height in cm')),
                ('weight', models.PositiveIntegerField(help_text='Weight in kgs')),
                ('waist', models.PositiveIntegerField(help_text='Waist in cm')),
                ('photo', models.ImageField(blank=True, null=True, upload_to=doctor.user.utils.profile_photo)),
                ('one_last_thing', models.TextField(blank=True)),
                ('is_staff', models.BooleanField(default=False, help_text='log into django admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('best_day_streak', models.PositiveIntegerField(default=0)),
                ('time_offset', models.IntegerField(default=0)),
                ('badges', models.ManyToManyField(blank=True, to='badges.Badges')),
                ('devices', models.ManyToManyField(blank=True, to='scarface.Device')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'User',
            },
            managers=[
                ('objects', doctor.user.managers.DoctorUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ForgotPassword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('token', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='forgotten_passwords', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Forgot Password',
                'verbose_name_plural': 'Forgot Password',
            },
        ),
        migrations.CreateModel(
            name='GeneralSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('alert_last_checked', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='general_settings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'General settings',
                'ordering': ['id'],
                'verbose_name_plural': 'General settings',
            },
        ),
        migrations.CreateModel(
            name='NotificationSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('meal', models.BooleanField(default=True)),
                ('incomplete_day', models.BooleanField(default=True)),
                ('good_morning', models.BooleanField(default=True)),
                ('weekly_checkup', models.BooleanField(default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_settings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Notification settings',
                'ordering': ['id'],
                'verbose_name_plural': 'Notification settings',
            },
        ),
        migrations.AddIndex(
            model_name='forgotpassword',
            index=models.Index(fields=['user'], name='user_forgot_user_id_279bca_idx'),
        ),
        migrations.AddIndex(
            model_name='forgotpassword',
            index=models.Index(fields=['token'], name='user_forgot_token_f0846a_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['email'], name='user_user_email_5f6a77_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['is_active'], name='user_user_is_acti_829fed_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['time_offset'], name='user_user_time_of_d310a3_idx'),
        ),
    ]
